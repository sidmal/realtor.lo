{% extends sonata_block.templates.block_base %}

{% block block %}
    <link rel="stylesheet" href="{{ asset('bundles/applicationsonatauser/css/call-card-v2.css') }}" media="all" />
    <script src="http://api-maps.yandex.ru/2.1/?lang=ru_RU" type="text/javascript"></script>

    <script type="text/javascript">
        var default_caller_name;

        function getUserReplacedPhones(){
            $.ajax({
                type: "post",
                url: "{{ path('user_get_phones_by_id') }}",
                data: { userId: $("#user-id").val() },
                success: function(response){
                    var content = "<tr><th>Номер</th><th>Действие</th></tr>";
                    $.each(response, function(i, item){
                        if($("#user-call-phone").val() == item.phone){
                            content += "<tr>" +
                                    "<td>" + item.phone + "</td>" +
                                    "<td><button disabled=\"disabled\" class=\"btn btn-mini btn-danger\" type=\"button\" onclick=\"$('#replace-user-phone-id').val(" + item.id + "); $('#action').val('user-replace-phone'); $('#call-card-form').submit();\">Запись уже содержит данный номер</button></td>" +
                                    "</tr>"
                        }
                        else{
                            content += "<tr>" +
                                    "<td>" + item.phone + "</td>" +
                                    "<td><button class=\"btn btn-mini btn-danger\" type=\"button\" onclick=\"$('#replace-user-phone-id').val(" + item.id + "); $('#action').val('user-replace-phone'); $('#call-card-form').submit();\">Заменить номер</button></td>" +
                                    "</tr>"
                        }
                    });

                    $("#user-phones-replace").find("table").html(content);
                    $("#user-phones-replace").modal({"keyboard": false, "backdrop": "static"});
                    $("#call-card").find(".modal-header").find(".close").attr("disabled", true);
                },
                dataType: 'json'
            });
        }

        function office_random_phone_forward(){
            $("#message, #caller-name").removeAttr("required");
            $("#action").val("office-random-phone-forward");
            $("#call-card-form").submit();
        }

        function forward_to_call_center(){
            $("#message, #caller-name").removeAttr("required");
            $("#action").val("forward-to-call-center");
            $("#call-card-form").submit();
        }

        function call_cancel()
        {
            if(!$("#call-result").find("option:selected").val()){
                alert("Укажите результат разговора."); return;
            }

            var linked_id = $("#linked-id").val();

            if(linked_id){
                $.ajax({
                    type: "post",
                    url: "{{ path('call_outcome_ajax') }}",
                    data: { action: "call_cancel", receiver: "hang", linked_id: linked_id, call_result: $("#call-result").find("option:selected").val() }
                });
            }

            $("#call-result-modal").modal("hide");
        }

        $("body").on("click", "#phone-type .btn-group button", function(){
            $("#call-card-buttons").html("");
            $('#call-type, #black-list-call-type').val($(this).val());

            var button_block = "<button class=\"btn btn-small btn-warning pull-right\" id=\"add-to-black-list-button\" type=\"button\" onclick=\"$('#add-to-black-list').modal({keyboard: false});\">Занести в черный список</button>"
                /*+ "<button class=\"btn btn-small btn-primary pull-left\" id=\"add-call-result\" type=\"button\" onclick=\"$('#call-card').modal('hide'); $('#call-result-modal').modal({keyboard: false});\">Добавить результат разговора</button>"*/;

            {% if app.user.isOperator == false %}
                button_block += "<button class=\"btn btn-small btn-success pull-left\" id=\"forward-to-call-center\" type=\"button\" onclick=\"forward_to_call_center()\">перевести в колл-центр</button>";
            {% endif %}


            switch(parseInt($(this).val())){
                case 0:
                    $(".required-buttons").html("").append(button_block);
                    $("#call-card-content").find("#container").html("").append("{% filter escape('js') %}{% include '@Call/Default/call_card_type_1.html.twig' %}{% endfilter %}")

                    if(default_caller_name){
                        $("#caller-name").val(default_caller_name);
                    }

                    $("#call-card-content").show("slow");
                    break;
                case 1:
                    button_block += "<input type=\"button\" class=\"btn btn-small btn-success pull-left\" id=\"office-random-phone-forward\" name=\"CallCard[office-random-phone-forward]\" value=\"Случайный вызов\" onclick=\"office_random_phone_forward();\">";

                    $(".required-buttons").html("").append(button_block);
                    $("#call-card-content").find("#container").html("").append("{% filter escape('js') %}{% include '@Call/Default/call_card_type_2.html.twig' %}{% endfilter %}");

                    if(default_caller_name){
                        $("#caller-name").val(default_caller_name);
                    }

                    $("#call-card-content").show("slow");
                    break;
                case 2:
                    button_block += "<input type=\"button\" class=\"btn btn-small btn-success pull-left\" id=\"forward-call-to-other-employer\" name=\"CallCard[forward-call-to-other-employer]\" value=\"Перевести звонок на другого сотрудника\" onclick=\"$('#forward-to-receiver-container').show();\">";

                    $(".required-buttons").html("").append(button_block);
                    $("#call-card-content").find("#container").html("").append("{% filter escape('js') %}{% include '@Call/Default/call_card_type_3.html.twig' %}{% endfilter %}")

                    if(default_caller_name){
                        $("#caller-name").val(default_caller_name);
                    }

                    $("#call-card-content").show("slow");
                    break;
                case 3:
                    button_block += "<input type=\"submit\" class=\"btn btn-small btn-success\" id=\"forward-call-to-ats\" name=\"CallCard[forward-call-to-ats]\" value=\"Перевести на АТС\" onclick=\"$('#message, #caller-name, #who-call').removeAttr('required'); $('#action').val($(this).attr('id')); $('#call-to-phone').val('Employee');\" />"

                    $(".required-buttons").html("").append(button_block);
                    $("#call-card-content").find("#container").html("").append("{% filter escape('js') %}{% include '@Call/Default/call_card_type_4.html.twig' %}{% endfilter %}")

                    if(default_caller_name){
                        $("#caller-name").val(default_caller_name);
                    }

                    $("#call-card-content").show("slow");
                    break;
                default:
                    $("#call-card-content").find("#container").html("");
                    break;
            }
        });

        $(document).ready(function(){
            $("#client-undefined").on("click", function(){
                if($(this).is(':checked')){
                    $("#caller-name").removeAttr("required").attr("readonly", true);
                }
            });

            $("#call-card-form").submit(function(event){
                event.preventDefault();

                $.ajax({
                    type: "post",
                    url: "{{ path('call_outcome_ajax') }}",
                    data: $("#call-card-form").serialize(),
                    complete: function(xhr, textStatus){
                        if(xhr.status == 208){
                            return self.alert(xhr.responseText); $("#add-to-black-list").modal("hide");
                        }

                        var action = $("#call-card-form input[id=action]").val();

                        if(action == "user-add-phone"){
                            self.alert("Номер сотрудника успешно добавлен."); $("#add-to-black-list").modal("hide");
                        }
                        else if(action == "user-replace-phone"){
                            self.alert("Номер сотрудника успешно изменен.");
                            $("#user-phones-replace").modal("hide");
                            $("#add-to-black-list").modal("hide");
                        }
                        else{
                            $("#call-card, #add-to-black-list").modal("hide");
                        }

                        $("#caller-default, #caller-default-info").html("");
                        $("#caller-name").val("");
                    },
                    dataType: 'json'
                });
            });

            $("#call-card").on("hidden", function(event){
                event.preventDefault();

                $("#call-card-form")[0].reset();
                $("#call-card-content").find("#container").html("");
                $("#call-card-content").find(".required-buttons").html("");
                $("#call-card-buttons").html("");

                $("#call-card-form").find("input[type=text], textarea").val("");

                $("#phone-type").find(".btn-group").find("button").each(function(){
                    $(this).attr("disabled", false);
                });
            });

            $("#user-phones-replace").on("hidden", function(event){
                event.preventDefault();
                $("#call-card").find(".modal-header").find(".close").removeAttr("disabled");
            });

            {% if app.user.getOfficePhone is not empty or app.user.getUserDutyPhone is not null %}
                call_event_listener(false);

                function call_event_listener(stop){
                    var user_phone = ["{{ app.user.getOfficePhone}}"];

                    {% if app.user.getUserDutyPhone is not null %}
                        user_phone.push("{{ app.user.getUserDutyPhone }}");
                    {% endif %}

                    $.ajax({
                        type: "post",
                        url: "{{ path('call_get_income_event_ajax') }}",
                        data: { to_phone: user_phone },
                        success: function(data){
                            if(data.callerName){
                                $("#caller-default, #caller-default-info").html("<strong>Инициатор звонка: " + data.caller_default + "</strong>");
                            }

                            if(data.callAction == "{{ call_dial_up_event }}"){
                                $("#caller-phone").html(data.fromPhone);
                                $("#black-list-caller-phone").val(data.fromPhone);
                                $("#linked-id, #black-list-linked-id").val(data.linkedId);
                                $("#call-id, #black-list-call-id").val(data.id);
                                $("#ats-call-id, #black-list-ats-call-id").val(data.atsCallId);

                                $("#call-card").modal("hide");

                                var caller_phone = data.fromPhone;

                                if(data.caller_default_name){
                                    $("#income-call-info-caller-name").html(" (" + data.caller_default_name + ")");
                                }

                                $("#income-call-info-caller-phone").html(caller_phone);
                                $("#income-call-info").modal({"keyboard": false, "backdrop": "static"});
                            }
                            else if(data.callAction == "{{ call_dial_down_event }}"){
                                var hide_linked_id = $("#linked-id").val();

                                if(hide_linked_id == data.linkedId){
                                    $("#call-card, #income-call-info").modal("hide");
                                }
                            }
                            else{
                                $("#caller-phone").html(data.fromPhone);
                                $("#black-list-caller-phone").val(data.fromPhone);
                                $("#linked-id, #black-list-linked-id").val(data.linkedId);
                                $("#call-id, #black-list-call-id").val(data.id);
                                $("#ats-call-id, #black-list-ats-call-id").val(data.atsCallId);

                                $("#income-call-info").modal('hide');

                                if(data.caller_default_name){
                                    default_caller_name = data.caller_default_name;
                                }

                                if(data.callerName){
                                    $("#phone-type").find(".btn-group").find("button[value=" + data.callType + "]").click();

                                    $("#phone-type").find(".btn-group").find("button").each(function(){
                                        $(this).attr("disabled", "disabled");
                                    });

                                    $("#caller-name").val(data.callerName);

                                    if(data.advertisingSource){
                                        $("#advertising-source, #advertising-source-v2").select2("val", data.advertisingSource);
                                    }

                                    if(data.reason){
                                        $("#reason").select2("val", data.reason);
                                    }

                                    if(data.branch){
                                        $("#branch").select2("val", data.branch);
                                    }

                                    if(data.propertyAddress){
                                        $("#property").val(data.propertyAddress);
                                    }

                                    if(data.propertyBaseId && data.propertyId){
                                        $("#object-href").attr("href", 'http://emls.ru/spb/term/fullinfo.php?b='+ data.propertyBaseId + '&o=' + data.propertyId);
                                    }

                                    if(data.propertyId){
                                        $("#property-id").val(data.propertyId);
                                    }

                                    if(data.propertyBaseId){
                                        $("#property-base-id").val(data.propertyBaseId);
                                    }

                                    if(data.propertyAgentId){
                                        $("#property-agent-id").val(data.propertyAgentId);
                                    }

                                    if(data.who_call){
                                        $("#who-call").select2("val", data.who_call);
                                    }

                                    if(data.message){
                                        $("#messages-history label").show();
                                        $("#messages-history table").html("");
                                        $.each(data.message, function(i, item){
                                            $("#messages-history table").append("<tr><td>" + item + "</td></tr>");
                                        });
                                    }
                                }

                                $("#call-card").modal({"keyboard": false, "backdrop": "static"});
                            }
                        },
                        complete: function(){
                            if(!stop){
                                var event_listener = setTimeout(call_event_listener(false), {{ settings.period * 1000 }});
                            }
                        },
                        dataType: 'json'
                    });
                }

                $("#call-result-modal").on("show", function(){
                    call_event_listener(true);
                });
            {% endif %}
        });
    </script>

    <!--
    <a href="#call-card" role="button" class="btn" data-toggle="modal">Launch demo modal</a>
    <a href="#income-call-info" role="button" class="btn" data-toggle="modal">Info modal</a>
    -->


    {% include '@SonataAdmin/Core/income_call_info.html.twig' %}

    {% include '@SonataAdmin/Core/add_to_black_list.html.twig' %}

    {% include '@SonataAdmin/Core/call_result_modal.html.twig' %}

    <div id="user-phones-replace" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="user_phones_replace" aria-hidden="true" style="z-index: 10000;">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
            <h3><strong>Номера телефонов для замены:</strong></h3>
        </div>
        <div class="modal-body">
            <label class="control-label required">Номера телефонов сотрудника:</label>
            <table class="table"></table>
        </div>
    </div>

    <form id="call-card-form">

        <div id="call-card" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="call_card" aria-hidden="true" style="width: 900px; margin-left: -450px;">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true" onclick="$('#call-result-modal').modal({'keyboard': false, 'backdrop': 'static'});">×</button>
                <h3 id="call-card-label">
                    <strong>
                        Номер телефона звонящего: <span id="caller-phone"></span>
                    </strong>
                </h3>
                <h4 id="caller-default"></h4>
                <div id="phone-type">
                    Выбирите тип звонка:
                    <div class="btn-group">
                        <button class="btn btn-small btn-success" type="button" value="0">Клиент знает объект</button>
                        <button class="btn btn-small btn-success" type="button" value="1">Клиент не знает чего хочет</button>
                        <button class="btn btn-small btn-success" type="button" value="2">Звонок сотрудника</button>
                        <button class="btn btn-small btn-success" type="button" value="3">Другое</button>
                    </div>
                </div>
            </div>

            <input type="hidden" name="CallCard[call-type]" id="call-type" value="" />
            <input type="hidden" name="CallCard[caller-phone]" id="caller-phone" value="{{ app.user.getUserDutyPhone is null ? app.user.getOfficePhone : app.user.getUserDutyPhone }}" />
            <input type="hidden" name="CallCard[linked-id]" id="linked-id" value="" />
            <input type="hidden" name="CallCard[call-id]" id="call-id" value="" />
            <input type="hidden" name="CallCard[ats-call-id]" id="ats-call-id" value="" />

            <input type="hidden" name="CallCard[action]" id="action" value="" />
            <input type="hidden" name="CallCard[call-to-phone]" id="call-to-phone" value="" />

            <input type="hidden" name="CallCard[branch-to-call]" id="branch-to-call" value="" />
            <input type="hidden" name="CallCard[call-result]" id="call-card-call-result" value="" />

            <input type="hidden" name="CallCard[replace-user-phone-id]" id="replace-user-phone-id" value="" />

            <div class="modal-body" id="call-card-content" style="display: none;">
                <div class="span12 required-buttons"></div>
                <div id="container"></div>
            </div>

            <div class="modal-footer" id="call-card-buttons">

            </div>
        </div>

    </form>
{% endblock %}