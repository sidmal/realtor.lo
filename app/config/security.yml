parameters:
    security.acl.permission.map.class: Sonata\AdminBundle\Security\Acl\Permission\AdminPermissionMap

jms_security_extra:
    secure_all_services: false
    expressions: true

security:
    encoders:
        FOS\UserBundle\Model\UserInterface:
            id: app.password.encoder

    role_hierarchy:
        ROLE_APP_EMPLOYEE:
            - ROLE_ADMIN_ADMIN_BRANCHES_LIST
            - ROLE_ADMIN_ADMIN_BRANCHES_VIEW
            - ROLE_ADMIN_ADMIN_REASON_LIST
            - ROLE_ADMIN_ADMIN_REASON_VIEW
            - ROLE_ADMIN_ADMIN_CALL_RESULT_LIST
            - ROLE_ADMIN_ADMIN_CALL_RESULT_VIEW
            - ROLE_ADMIN_ADMIN_BLACK_LIST_LIST
            - ROLE_ADMIN_ADMIN_BLACK_LIST_VIEW
            - ROLE_ADMIN_ADMIN_DUTY_LIST
            - ROLE_ADMIN_ADMIN_DUTY_VIEW
            - ROLE_ADMIN_ADMIN_DUTY_OLD_LIST
            - ROLE_ADMIN_ADMIN_DUTY_OLD_VIEW
            - ROLE_ADMIN_ADMIN_ADVERTISING_SOURCE_LIST
            - ROLE_ADMIN_ADMIN_ADVERTISING_SOURCE_VIEW
        ROLE_APP_OPERATOR: [ROLE_APP_EMPLOYEE]
        ROLE_APP_AGENT: [ROLE_APP_OPERATOR]
        ROLE_APP_OFFICE_OPERATOR: [ROLE_APP_AGENT]
        ROLE_APP_MANAGER:
            - ROLE_APP_EMPLOYEE

            - ROLE_ADMIN_ADMIN_DUTY_OLD_CREATE
            - ROLE_ADMIN_ADMIN_DUTY_OLD_EDIT
            - ROLE_ADMIN_ADMIN_DUTY_OLD_EXPORT
            - ROLE_ADMIN_ADMIN_DUTY_OLD_PRINT

            - ROLE_ADMIN_ADMIN_DUTY_CREATE
            - ROLE_ADMIN_ADMIN_DUTY_EDIT
            - ROLE_ADMIN_ADMIN_DUTY_EXPORT
            - ROLE_ADMIN_ADMIN_DUTY_PRINT
        ROLE_APP_OFFICE_DIRECTOR: [ROLE_APP_MANAGER]
        ROLE_APP_ADMINISTRATOR:
            - ROLE_APP_MANAGER

            - ROLE_ADMIN_ADMIN_BRANCHES_CREATE
            - ROLE_ADMIN_ADMIN_BRANCHES_EDIT
            - ROLE_ADMIN_ADMIN_BRANCHES_DELETE
            - ROLE_ADMIN_ADMIN_BRANCHES_EXPORT

            - ROLE_ADMIN_ADMIN_REASON_CREATE
            - ROLE_ADMIN_ADMIN_REASON_EDIT
            - ROLE_ADMIN_ADMIN_REASON_DELETE
            - ROLE_ADMIN_ADMIN_REASON_EXPORT

            - ROLE_ADMIN_ADMIN_CALL_RESULT_CREATE
            - ROLE_ADMIN_ADMIN_CALL_RESULT_EDIT
            - ROLE_ADMIN_ADMIN_CALL_RESULT_DELETE
            - ROLE_ADMIN_ADMIN_CALL_RESULT_EXPORT

            - ROLE_ADMIN_ADMIN_BLACK_LIST_CREATE
            - ROLE_ADMIN_ADMIN_BLACK_LIST_EDIT
            - ROLE_ADMIN_ADMIN_BLACK_LIST_DELETE
            - ROLE_ADMIN_ADMIN_BLACK_LIST_EXPORT

            - ROLE_ADMIN_ADMIN_ADVERTISING_SOURCE_CREATE
            - ROLE_ADMIN_ADMIN_ADVERTISING_SOURCE_EDIT
            - ROLE_ADMIN_ADMIN_ADVERTISING_SOURCE_DELETE
            - ROLE_ADMIN_ADMIN_ADVERTISING_SOURCE_EXPORT

            - ROLE_SONATA_USER_ADMIN_USER_LIST
            - ROLE_SONATA_USER_ADMIN_USER_VIEW
            - ROLE_SONATA_USER_ADMIN_USER_CREATE
            - ROLE_SONATA_USER_ADMIN_USER_EDIT
            - ROLE_SONATA_USER_ADMIN_USER_DELETE
            - ROLE_SONATA_USER_ADMIN_USER_EXPORT

            - ROLE_SONATA_USER_ADMIN_GROUP_LIST
            - ROLE_SONATA_USER_ADMIN_GROUP_VIEW
            - ROLE_SONATA_USER_ADMIN_GROUP_CREATE
            - ROLE_SONATA_USER_ADMIN_GROUP_EDIT
            - ROLE_SONATA_USER_ADMIN_GROUP_DELETE
            - ROLE_SONATA_USER_ADMIN_GROUP_EXPORT

            - ROLE_ADMIN_ADMIN_USER_PHONES_LIST
            - ROLE_ADMIN_ADMIN_USER_PHONES_VIEW
            - ROLE_ADMIN_ADMIN_USER_PHONES_DELETE
            - ROLE_ADMIN_ADMIN_USER_PHONES_VERIFY
            - ROLE_ADMIN_ADMIN_USER_PHONES_CALL

            - ROLE_ADMIN_ADMIN_CALLERS_CREATE
            - ROLE_ADMIN_ADMIN_CALLERS_EDIT
            - ROLE_ADMIN_ADMIN_CALLERS_LIST
            - ROLE_ADMIN_ADMIN_CALLERS_VIEW
            - ROLE_ADMIN_ADMIN_CALLERS_DELETE
            - ROLE_ADMIN_ADMIN_CALLERS_EXPORT
        ROLE_ADMIN:
            - ROLE_USER
            - ROLE_APP_EMPLOYEE
            - ROLE_APP_OPERATOR
            - ROLE_APP_AGENT
            - ROLE_APP_OFFICE_OPERATOR
            - ROLE_APP_OFFICE_DIRECTOR
            - ROLE_APP_MANAGER
            - ROLE_APP_ADMINISTRATOR
            - ROLE_SONATA_ADMIN
        ROLE_SUPER_ADMIN:
            - ROLE_USER
            - ROLE_ADMIN
            - ROLE_ALLOWED_TO_SWITCH

    providers:
        #in_memory:
        #    memory:
        #        users:
        #            user:  { password: userpass, roles: [ 'ROLE_USER' ] }
        #            admin: { password: adminpass, roles: [ 'ROLE_ADMIN' ] }

        fos_userbundle:
            id: fos_user.user_manager

    firewalls:
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false

        login:
            pattern:  ^/demo/secured/login$
            security: false

        secured_area:
            pattern:    ^/demo/secured/
            form_login:
                check_path: _security_check
                login_path: _demo_login
            logout:
                path:   _demo_logout
                target: _demo
            #anonymous: ~
            #http_basic:
            #    realm: "Secured Demo Area"

        # -> custom firewall for the admin area of the URL
        admin:
            pattern: /admin(.*)
            form_login:
                provider: fos_userbundle
                login_path: /admin/login
                use_forward: false
                check_path: /admin/login_check
                failure_path: null
                default_target_path: /admin
                success_handler: authentication_handler
                failure_handler: authentication_handler
            logout:
                path: /admin/logout
                target: /admin/login
                handler: authentication_handler
            anonymous: true
        # -> end custom configuration

        # defaut login area for standard users
        main:
            pattern: .*
            form_login:
                provider: fos_userbundle
                login_path: /login
                use_forward: false
                check_path: /login_check
                failure_path: null
            logout: true
            anonymous: true

    access_control:
        # URL of FOSUserBundle which need to be available to anonymous users
        - { path: ^/_wdt, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/_profiler, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }

        # -> custom access control for the admin area of the URL
        - { path: ^/admin/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/logout$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/login-check$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        # -> end

        - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }

        # Secured part of the site
        # This config requires being logged for the whole site and having the admin role for the admin part.
        # Change these rules to adapt them to your needs
        - { path: ^/admin, role: [ROLE_ADMIN, ROLE_SONATA_ADMIN, ROLE_APP_ADMINISTRATOR, ROLE_APP_MANAGER, ROLE_APP_OPERATOR, ROLE_APP_AGENT, ROLE_APP_OFFICE_DIRECTOR, ROLE_APP_OFFICE_OPERATOR, ROLE_APP_EMPLOYEE] }
        - { path: ^/.*, role: IS_AUTHENTICATED_ANONYMOUSLY }
