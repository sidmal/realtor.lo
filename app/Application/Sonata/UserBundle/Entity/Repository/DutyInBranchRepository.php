<?php

namespace Application\Sonata\UserBundle\Entity\Repository;

use Doctrine\Common\Collections\ArrayCollection;
use Doctrine\DBAL\Types\Type;
use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\NoResultException;
use Doctrine\ORM\Query\Parameter;
use Realtor\DictionaryBundle\Entity\Branches;

/**
 * DutyInBranchRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class DutyInBranchRepository extends EntityRepository
{
    public function getDutyCountByDateAndBranch(\DateTime $date, $branch = null)
    {
        $builder = $this->getEntityManager()->createQueryBuilder()
            ->from('ApplicationSonataUserBundle:DutyInBranches', 'duty_in_branch')
            ->where('duty_in_branch.dutyDate = :duty_date')
            ->setParameter('duty_date', $date, Type::DATE)
            ->setMaxResults(1)
        ;

        $builder->select($builder->expr()->count('duty_in_branch.id'));

        if($branch){
            $builder->andWhere('duty_in_branch.branchId = :branch_id')
                ->setParameter('branch_id', $branch);
        }

        try{
            $result = $builder->getQuery()->getSingleScalarResult();
        }
        catch(NoResultException $e){
            $result = null;
        }

        return $result;
    }
}
