<?php

namespace Application\Sonata\UserBundle\Entity\Repository;

use Doctrine\Common\Collections\ArrayCollection;
use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\NoResultException;
use Doctrine\ORM\Query\Parameter;

/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository extends EntityRepository
{
    public function getManagerByBranch($branchId)
    {
        $qb = $this->getEntityManager()->createQueryBuilder()
            ->select('user')
            ->from('ApplicationSonataUserBundle:User', 'user')
            ->where('user.branch = :branch')
            ->andWhere('user.isFired = :is_fired')
        ;

        $qb->andWhere($qb->expr()->like('user.roles', ':role'));

        $qb->setParameters(
            new ArrayCollection(
                [
                    new Parameter('branch', $branchId),
                    new Parameter('role', '%ROLE_APP_MANAGER%'),
                    new Parameter('is_fired', false)
                ]
            )
        );

        try{
            $result = $qb->getQuery()->getResult();
        }
        catch(NoResultException $e){
            $result = null;
        }

        return $result;
    }

    public function getAgentByManager($managerId)
    {
        $qb = $this->getEntityManager()->createQueryBuilder()
            ->select('user')
            ->from('ApplicationSonataUserBundle:User', 'user')
            ->where('user.isFired = :is_fired')
            ->andWhere('user.head = :manager')
        ;

        $qb->andWhere($qb->expr()->like('user.roles', ':role'));

        $qb->setParameters(
            new ArrayCollection(
                [
                    new Parameter('manager', $managerId),
                    new Parameter('role', '%ROLE_APP_AGENT%'),
                    new Parameter('is_fired', false)
                ]
            )
        );

        try{
            $result = $qb->getQuery()->getResult();
        }
        catch(NoResultException $e){
            $result = null;
        }

        return $result;
    }

    public function getUserByName($userName)
    {
        $builder = $this->getEntityManager()->createQueryBuilder()
            ->select('user')
            ->from('ApplicationSonataUserBundle:User', 'user')
        ;

        $builder->where(
            $builder->expr()->like(
                $builder->expr()->lower('user.fio'),
                $builder->expr()->lower(':userName')
            )
        )->setParameter('userName', '%'.$userName.'%');

        try{
            $result = $builder->getQuery()->getResult();
        }
        catch(NoResultException $e){
            $result = null;
        }

        return $result;

    }

    public function getUserByPhone($phone)
    {
        $builder = $this->getEntityManager()->createQueryBuilder()
            ->select('user')
            ->from('ApplicationSonataUserBundle:User', 'user')
            ->where('user.officePhone = :phone');

        $builder->orWhere($builder->expr()->like('user.phone', ':like_phone'));

        $builder->setParameters(
            new ArrayCollection(
                [
                    new Parameter('phone', $phone),
                    new Parameter('like_phone', '%'.$phone.'%')
                ]
            )
        );

        try{
            $result = $builder->getQuery()->getResult();
        }
        catch(NoResultException $e){
            $result = null;
        }

        return $result;
    }
}
